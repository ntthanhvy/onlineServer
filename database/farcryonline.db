-- Usage: psql -U postgres < path_of_db_file

-- Drop & Create database
DROP DATABASE farcryonline;
CREATE DATABASE farcryonline ENCODING  "utf8" TEMPLATE template1;

-- Connect to database
\c farcryonline

-- For using uuid_generate_v1()
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

CREATE TABLE IF NOT EXISTS match (
    match_id    uuid            NOT NULL DEFAULT uuid_generate_v1(),
    start_time  timestamptz(3)  NOT NULL,
    end_time    timestamptz(3)  NOT NULL,
    game_mode   text            NOT NULL,
    map_name    text            NOT NULL
);

CREATE TABLE IF NOT EXISTS match_frag (
    match_id 	    uuid 	        NOT NULL,
    frag_time 	    timestamptz(3) 	NOT NULL,
    killer_name 	text 	        NOT NULL,
    victim_name 	text,
    weapon_code 	text
);

CREATE TABLE IF NOT EXISTS weapon (
    id 	        SERIAL 	PRIMARY KEY,
    code_name   text    NOT NULL    UNIQUE,
    description text    NOT NULL,
    image_url   text    NOT NULL
);

CREATE TABLE IF NOT EXISTS player (
    player_id   SERIAL  PRIMARY KEY,
    player_name text    NOT NULL    UNIQUE,
    email       text    NOT NULL    UNIQUE,
    salt        text    NOT NULL,
    hashpass    text    NOT NULL
);

CREATE TABLE IF NOT EXISTS player_profile (
    player_id 	    int 	NOT NULL,
    character_name 	text 	NOT NULL,
    character_model text    NOT NULL,
    character_color int     NOT NULL,
    quality_display int     NOT NULL
);

CREATE TABLE IF NOT EXISTS player_key_bindings (
    player_id   int 	NOT NULL,
    keybindings text    NOT NULL
);


-- Create virtual table
CREATE OR REPLACE VIEW match_statistics
AS
    SELECT
        C.match_id,
        C.player_name,
        SUM(C.kill_count) AS kill_count,
        SUM(C.suicide_count) AS suicide_count,
        SUM(C.death_count) AS death_count,
        ROUND(
            SUM(C.kill_count) * 100.0 / (SUM(C.kill_count) + SUM(C.death_count) + SUM(C.death_count)),
            2
        ) AS efficiency
    FROM
        (
        SELECT
            match_id,
            killer_name AS player_name,
            COUNT(victim_name) AS kill_count,
            COUNT(*) - COUNT(victim_name) AS suicide_count,
            0 AS death_count
        FROM match_frag
        GROUP BY match_id, player_name
        UNION ALL
        SELECT
            match_id,   
            victim_name AS player_name,
            0 AS kill_count,
            0 AS suicide_count,
            count(victim_name) AS death_count
        FROM match_frag
        WHERE victim_name is NOT NULL
        GROUP BY match_id, player_name
        ORDER BY match_id, player_name
        ) C
GROUP BY match_id, player_name;

-- Add primary key contraint and foreign key contraint

ALTER TABLE IF EXISTS player_profile
    ADD CONSTRAINT fk_player_profile_player_id
    FOREIGN KEY (player_id) REFERENCES player(player_id)
    ON UPDATE CASCADE ON DELETE RESTRICT;

ALTER TABLE IF EXISTS match
    ADD CONSTRAINT pk_match_match_id PRIMARY KEY (match_id);

ALTER TABLE IF EXISTS match_frag
    ADD CONSTRAINT fk_match_frag_match_id
    FOREIGN KEY (match_id) REFERENCES match(match_id)
    ON UPDATE CASCADE ON DELETE RESTRICT;

ALTER TABLE IF EXISTS match_frag
    ADD CONSTRAINT fk_match_frag_code_name
    FOREIGN KEY (weapon_code) REFERENCES weapon(code_name)
    ON UPDATE CASCADE ON DELETE RESTRICT;